## rotating certs every ~ year https://linkerd.io/2/tasks/manually-rotating-control-plane-tls-credentials/
trigger: none
pr: none

variables:  
  # service connection for Kube
  kubernetesSvcConn: 'aks-svcconn'
  exp: '2021-10-07T19:43:08Z'

stages:
- stage: LinkerdSetup
  displayName: Linkerd Setup
  jobs:  
  - job: LinkerdSetup
    steps:

    - task: DownloadSecureFile@1
      displayName: Retrieving ca.crt
      inputs:
        secureFile: 'ca.crt'

    - task: DownloadSecureFile@1
      displayName: Retrieving issuer.crt
      inputs:
        secureFile: 'issuer.crt'

    - task: DownloadSecureFile@1
      displayName: Retrieving issuer.key
      inputs:
        secureFile: 'issuer.key'

    - task: HelmDeploy@0
      displayName: Linkerd helm repo
      inputs:
        connectionType: 'Kubernetes Service Connection'
        kubernetesServiceConnection: '$(kubernetesSvcConn)'
        command: 'repo'
        arguments: 'add linkerd https://helm.linkerd.io/stable'

    - task: HelmDeploy@0
      displayName: Linkerd update/deploy
      inputs:
        connectionType: 'Kubernetes Service Connection'
        kubernetesServiceConnection: '$(kubernetesSvcConn)'
        command: 'upgrade'
        chartType: 'Name'
        chartName: 'linkerd/linkerd2'
        releaseName: 'linkerd2'
        arguments: >
          --set-file global.identityTrustAnchorsPEM=$(Agent.TempDirectory)/ca.crt
          --set-file identity.issuer.tls.crtPEM=$(Agent.TempDirectory)/issuer.crt
          --set-file identity.issuer.tls.keyPEM=$(Agent.TempDirectory)/issuer.key
          --set identity.issuer.crtExpiry="\"$(exp)\""
          --set global.prometheusUrl=http://prometheus-operated.monitoring.svc.cluster.local:9090
          --set global.grafanaUrl=http://monitoring-grafana.monitoring.svc.cluster.local:3000
          --set global.proxy.resources.cpu.limit="1"
          --set global.proxy.resources.cpu.request=100m
          --set global.proxy.resources.memory.limit=250Mi
          --set global.proxy.resources.memory.request=20Mi

    - task: Kubernetes@1
      displayName: Annotating sock-shop linkerd injection
      inputs:
        connectionType: 'Kubernetes Service Connection'
        kubernetesServiceEndpoint: $(kubernetesSvcConn)
        command: 'annotate'
        arguments: 'namespace sock-shop linkerd.io/inject=enabled --overwrite'

    - task: Kubernetes@1
      displayName: Annotating app-metrics-agent linkerd injection
      inputs:
        connectionType: 'Kubernetes Service Connection'
        kubernetesServiceEndpoint: $(kubernetesSvcConn)
        command: 'annotate'
        arguments: 'namespace app-metrics-agent linkerd.io/inject=enabled --overwrite'

    - task: Kubernetes@1
      displayName: Annotating demoapp linkerd injection
      inputs:
        connectionType: 'Kubernetes Service Connection'
        kubernetesServiceEndpoint: $(kubernetesSvcConn)
        command: 'annotate'
        arguments: 'namespace demoapp linkerd.io/inject=enabled --overwrite'
