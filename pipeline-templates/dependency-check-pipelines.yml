parameters:
- name: project
  default: 'unknown'
- name: version
  default: 'unknown'
- name: language
  default: ''
 
steps:
# - task: Bash@3
#   displayName: Download dependency check
#   inputs:
#     targetType: 'inline'
#     script: |
#       cd $(Agent.ToolsDirectory)

#       gpg --keyserver hkp://keys.gnupg.net --recv-keys F9514E84AE3708288374BBBE097586CFEA37F9A6;
      
#       curl https://dl.bintray.com/jeremy-long/owasp/dependency-check-5.3.2-release.zip -OL;

#       curl https://dl.bintray.com/jeremy-long/owasp/dependency-check-5.3.2-release.zip.asc -OL;
      
#       gpg --verify dependency-check-5.3.2-release.zip.asc;

#       unzip dependency-check-5.3.2-release.zip;

# - task: GoTool@0
#   inputs:
#     version: '1.10'
# - task: Bash@3
#   displayName: Run Dependency Check
#   inputs:
#     targetType: 'inline'
#     script: '$(Agent.ToolsDirectory)/dependency-check/bin/dependency-check.sh --project ${{ parameters.project }} --scan ${{ parameters.cliSources }} --out $(Build.ArtifactStagingDirectory) --format ALL --enableExperimental'

# - task: PublishBuildArtifacts@1
#   displayName: Publish results
#   inputs:
#     PathtoPublish: '$(Build.ArtifactStagingDirectory)'
#     ArtifactName: 'dependency-check'
#     publishLocation: 'Container'

- task: Kubernetes@1
  name: GetSonarQubePodTask
  inputs:
    connectionType: 'Kubernetes Service Connection'
    kubernetesServiceEndpoint: 'aks-svcconn'
    command: 'get'
    arguments: 'pod --namespace sonarqube -l "app=sonarqube"'
    outputFormat: "jsonpath='{.items[0].metadata.name}'"
- task: PowerShell@2
  displayName: Export sonarqube pod
  inputs:
    targetType: 'inline'
    script: |
      Write-Host "##vso[task.setvariable variable=pod]"GetSonarQubePodTask.KubectlOutput

- task: Bash@3
  inputs:
    targetType: 'inline'
    script: 'echo $(pod)'

- task: Kubernetes@1
  displayName: Create new report directory
  inputs:
    connectionType: 'Kubernetes Service Connection'
    kubernetesServiceEndpoint: 'aks-svcconn'
    command: 'exec'
    arguments: '-it $SONARQUBE_POD -- mkdir -p /opt/sonarqube/dependency-check/${{ parameters.project }}/${{ parameters.version }}'
    secretType: 'dockerRegistry'
    containerRegistryType: 'Azure Container Registry'
- task: Kubernetes@1
  displayName: Copy over dependency check reports
  inputs:
    connectionType: 'Kubernetes Service Connection'
    kubernetesServiceEndpoint: 'aks-svcconn'
    namespace: 'sonarqube'
    command: 'cp'
    arguments: '$(Build.ArtifactStagingDirectory) $SONARQUBE_POD:/opt/sonarqube/dependency-check/${{ parameters.project }}/${{ parameters.version }}'
    secretType: 'dockerRegistry'
    containerRegistryType: 'Azure Container Registry'