parameters:
- name: projectVersion
  default: 'unknown'
- name: cliSources
  default: '/'
- name: scannerMode
  default: 'CLI'
- name: projectKey
  default: ''
- name: sonarQubeSvcConn
  default: 'sq-svcconn'
stages: 
- stage: SecurityScan
  displayName: Security Scan
  jobs:
  - job: SonarQubeScan
    steps:
    - task: SonarQubePrepare@4  # prepare for non msbuild/ maven source
      displayName: SonarQube Preparing
      condition: eq('${{parameters.scannerMode }}', 'CLI')
      inputs:
        SonarQube: '${{ parameters.sonarQubeSvcConn }}'
        scannerMode: 'CLI'
        configMode: 'manual'
        cliProjectKey: '${{ parameters.projectKey }}'
        cliSources: '${{ parameters.cliSources }}'
      
    - task: SonarQubePrepare@4 # prepare for msbuild
      displayName: SonarQube Preparing MSBuild
      condition: eq('${{ parameters.scannerMode }}', 'MSBuild')
      inputs:
        SonarQube: '${{ parameters.sonarQubeSvcConn }}'
        scannerMode: 'MSBuild'
        projectKey: '${{ parameters.projectKey }}'
        
    - task: SonarQubePrepare@4 #prepare for maven
      displayName: SonarQube Preparing Maven
      condition: eq('${{ parameters.scannerMode }}', 'Other')
      inputs:
        SonarQube: '${{ parameters.sonarQubeSvcConn }}'
        scannerMode: 'Other'
          
    - task: SonarQubeAnalyze@4
      displayName: SonarQube Analyzing
      condition: eq('${{ parameters.scannerMode }}', 'CLI')

  - job: AnotherScan
    steps:
    - task: Bash@3
      inputs:
        targetType: 'inline'
        script: |
          # Write your commands here
          
          echo 'Hello world'